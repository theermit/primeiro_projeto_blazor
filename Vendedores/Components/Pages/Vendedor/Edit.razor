@page "/vendedor/edit/{Id:int}"

@rendermode InteractiveServer

@inject ApplicationDbContext Context

@inject NavigationManager Navigation

<h1>Editar Vendedor</h1>

<EditForm Model="@Model" OnValidSubmit="EditarVendedorAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label" for="nome">Nome</label>
        <InputText id="nome" class="form-control" @bind-Value="Model.Nome"/>
        <ValidationMessage For="@(() => Model.Nome)" />
    </div>
    <div class="mb-3">
        <label class="form-label" for="email">E-mail</label>
        <InputText id="email" class="form-control" @bind-Value="Model.Email"/>
        <ValidationMessage For="@(() => Model.Email)" />
    </div>
    <div class="mb-3">
        <label class="form-label" for="regiao">Regi√£o</label>
        <InputSelect id="regiao" class="form-control" @bind-Value="Model.RegiaoId">
            @foreach(var Regiao in Regioes)
            {
                if(Regiao.Id == Model.RegiaoId)
                {
                    <option value="@Regiao.Id" selected>@Regiao.Nome</option>
                }
                else 
                {
                    <option value="@Regiao.Id">@Regiao.Nome</option>
                }
            }
        </InputSelect>
        <ValidationMessage For="@(() => Model.RegiaoId)" />
    </div>
    <a href="/vendedor" class="btn btn-primary">voltar</a>
    <button type="submit" class="btn btn-success">Editar</button>

</EditForm>

@code
{
    [Parameter]
    public int Id{get;set;}

    public Vendedor Model{get;set;} = new();

    public IEnumerable<Regiao> Regioes {get; set;} = new List<Regiao>();

    protected override async Task OnInitializedAsync()
    {
        Regioes = await Context.Regioes.ToListAsync<Regiao>();
            
        Model = await Context.Vendedores
            .FirstOrDefaultAsync<Vendedor>(x => x.Id == Id);
    }

    public async Task EditarVendedorAsync()
    {
        Context.Vendedores.Update(Model);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("vendedor");
    }
}